class Solution {
    public List<List<String>> findDuplicate(String[] paths) {
        List<List<String>> results = new ArrayList<>();
        if(paths==null || paths.length==0)
            return results;
        
        Map<String,ArrayList<String>> map = new HashMap<>();
        Set<String> set = new HashSet<>();
        
        for(int i=0;i<paths.length;i++){
            String[] s1 = paths[i].split(" ");
            for(int j=1;j<s1.length;j++){
                String[] substr = s1[j].split("\\(");
                substr[1] = substr[1].substring(0,substr[1].length()-1);
                // System.out.println(substr[0] + " " +substr[1]);
                map.putIfAbsent(substr[1],new ArrayList<String>());
                map.get(substr[1]).add(s1[0]+"/" + substr[0]);
                // System.out.println(map.get(substr[1]));
                // return results;
                set.add(substr[1]);
            }
        }
        
        for(String a: set){
            if(map.get(a).size() >1){
                results.add(map.get(a));
            }
        }
        
        // return new ArrayList<>(map.values());
        return results;
    }
}
