/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        l1=reverse(l1);
        l2=reverse(l2);
        ListNode result = addTwo(l1,l2);
        return reverse(result);
    }
    
    private ListNode addTwo(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        ListNode result = dummy;
        int sum = 0;
        
        while(l1!=null || l2!=null){
            
            if(l1!=null){
                sum+=l1.val;
                l1=l1.next;
            }
            
            if(l2!=null){
                sum+=l2.val;
                l2=l2.next;
            }
            
            result.next = new ListNode(sum%10);
            result=result.next;
            sum=sum/10;
        }
        
        if(sum !=0){
            result.next= new ListNode(sum);
        }
        
        return dummy.next;
    }
    
    private ListNode reverse(ListNode head){
        ListNode prev=null;
        while(head!=null){
            ListNode temp = head.next;
            head.next=prev;
            prev=head;
            head=temp;
        }
        return prev;
    }
}
