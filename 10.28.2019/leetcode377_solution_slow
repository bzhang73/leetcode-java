class Solution {
    public int combinationSum4(int[] nums, int target) {
        if(nums.length==0||target<0)
            return 0;
        List<List<Integer>> res=new ArrayList<>();
        Arrays.sort(nums);
        dfs(nums,new ArrayList<Integer>(),target,res);
        // for(List<Integer> list:res){
        //     for(int a:list){
        //         System.out.print(a+" ");
        //     }
        //     System.out.println();
        // }
        return res.size();
    }
    
    private void dfs(int[] nums, List<Integer> combination, int target, List<List<Integer>> res){
        if(target==0){
            res.add(new ArrayList<Integer>(combination));
            return;
        }
        
        for(int i=0;i<nums.length;i++){
            if(nums[i]>target)
                break;
            combination.add(nums[i]);
            dfs(nums,combination,target-nums[i],res);
            combination.remove(combination.size()-1);
        }
    }
}
