class Solution {
    public String longestPalindrome(String s) {
        if (s==null || s.length()==0){
            return "";
        }
        
        int n = s.length();
        boolean[][] isPlindrome = new boolean[n][n];
        
        int longest = 1, start=0;
        
        for(int i=0;i<n;i++){
            isPlindrome[i][i]=true;
        }
        
        for(int i=0;i<n-1;i++){
            isPlindrome[i][i+1]=s.charAt(i)==s.charAt(i+1);
            
            if(isPlindrome[i][i+1]){
                start=i;
                longest=2;
            }
        }
        
        for(int i=n-1;i>=0;i--){
            for(int j=i+2;j<n;j++){
                isPlindrome[i][j]=isPlindrome[i+1][j-1]  && s.charAt(i)==s.charAt(j);
                if(isPlindrome[i][j] && j-i+1>longest){
                    start=i;
                    longest=j-i+1;
                }
            }
        }
        
        return s.substring(start,start+longest);
    }
}
