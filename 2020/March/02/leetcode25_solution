/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode dummy = new ListNode(0);
        dummy.next=head;
        if(k<2 || head==null)
            return head;
        head=dummy;
        while(head.next!=null){
            head=reverse(head,k);
        }
        return dummy.next;
    }
    
    private ListNode reverse(ListNode head, int k){
        ListNode next=head;
        for(int i=0;i<k;i++){
            if(next.next==null)
                return next;
            next=next.next;
        }
        
            
        ListNode prev=head;
        ListNode n1=head.next;
        ListNode current = n1;
        for(int i=0;i<k;i++){
            ListNode temp = current.next;
            current.next=prev;
            prev=current;
            current=temp;
        }
        n1.next=current;
        head.next=prev;
        System.out.println(n1.val);
        return n1;
    }
}
