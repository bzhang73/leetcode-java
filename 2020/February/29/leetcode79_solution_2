class Solution {
    private int m,n;
    public boolean exist(char[][] board, String word) {
        if(board==null || board.length==0 || board[0]==null || board[0].length==0 || word.length()==0)
            return false;
        
        m = board.length;
        n = board[0].length;
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j] == word.charAt(0))
                    if(find(board, i, j, 0, word))
                        return true;
            }
        }
        
        return false;
    }
    
    private boolean find(char[][] board, int x, int y, int index, String word){
        if(index==word.length())
            return true;
        
        if(x<0 || x>=m || y<0 || y>=n || board[x][y]!=word.charAt(index))
            return false;
        
        board[x][y]='#';
        
        boolean res= find(board, x-1, y, index+1, word) || find(board, x+1, y , index+1, word) 
            || find(board, x, y-1, index+1, word) || find(board, x, y+1, index+1, word);
        board[x][y]=word.charAt(index);
        return res;
    }
}
