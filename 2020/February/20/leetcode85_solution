class Solution {
    public int maximalRectangle(char[][] matrix) {
        if(matrix==null || matrix.length==0)
            return 0;
        
        int m = matrix.length;
        int n = matrix[0].length;
        int[][] up = new int[m][n];
        int[][] left = new int[m][n];
        int[][] right = new int[m][n];
        int i,j,k,l,r,res;
        res=0;
        
        for(i=0;i<m;i++){
            //up down
            for(j=0;j<n;j++){
                if(matrix[i][j]=='0'){
                    up[i][j]=0;
                }else{
                    up[i][j]=1;
                    if(i>0)
                        up[i][j]+=up[i-1][j];
                }
            }
            
            //left right
            l=0;
            for(j=0;j<n;j++){
                if(matrix[i][j]=='0'){
                    left[i][j]=0;
                    l=0;
                }else{
                    l++;
                    left[i][j]=l;
                    if(i>0 && matrix[i-1][j]=='1' && left[i-1][j]<left[i][j])
                        left[i][j]=left[i-1][j];
                }
            }
            
            //right left
            r=0;
            for(j=n-1;j>=0;j--){
                if(matrix[i][j]=='0'){
                    right[i][j]=0;
                    r=0;
                }else{
                    r++;
                    right[i][j]=r;
                    if(i>0 && matrix[i-1][j]=='1' && right[i-1][j]<right[i][j])
                        right[i][j]=right[i-1][j];
                }
            }
        }
        
        for(i=0;i<m;i++){
            for(j=0;j<n;j++){
                res = Math.max(res, up[i][j]*(left[i][j]+right[i][j]-1));
            }
        }
        return res;
    }
}
