/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<TreeNode> generateTrees(int n) {
        List<TreeNode> res = new ArrayList<>();
        if(n<1)
            return res;
        if(n==1){
            TreeNode root = new TreeNode(n);
            res.add(root);
            return res;
        }
        return helper(1,n);   
    }
    
    private List<TreeNode> helper(int start, int end){
        List<TreeNode> res = new ArrayList<>();
        if(start>end){
            res.add(null);
            return res;
        }
        if(start==end){
            TreeNode root = new TreeNode(start);
            res.add(root);
            return res;
        }
        
        for(int i=start;i<=end;i++){
            List<TreeNode> leftTrees = helper(start, i-1);
            List<TreeNode> rightTrees = helper(i+1,end);
            
            for(TreeNode leftTree: leftTrees){
                for(TreeNode rightTree: rightTrees){
                    TreeNode root = new TreeNode(i);
                    root.left = leftTree;
                    root.right = rightTree;
                    
                    res.add(root);
                }
            }
        }
        return res;
    }
}
