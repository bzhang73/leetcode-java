class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        if(nums==null || nums.length==0){
            return new ArrayList<>();
        }
        
        List<List<Integer>> res = new ArrayList<>();
        
        Arrays.sort(nums);
        for(int i=0;i<nums.length;i++){
            if(i!=0 && nums[i]== nums[i-1]){
                continue;
            }
            
            int left=i+1;
            int right=nums.length-1;
            int target = -nums[i];
            
            twoSum(nums,left,right,target, i,res);
        }
        return res;
    }
    
    private void twoSum(int[] nums, int left, int right, int target, int start, List<List<Integer>> res){
        while(left<right){
            int sum = nums[left]+nums[right];
            if(sum== target){
                List<Integer> result = new ArrayList<>();
                result.add(nums[start]);
                result.add(nums[left]);
                result.add(nums[right]);
                
                res.add(result);
                
                left++;
                right--;
                
                while(left<right && nums[left]==nums[left-1]){
                    left++;
                }
                
                while(left<right && nums[right] == nums[right+1]){
                    right--;
                }
            }else if(sum<target){
                left++;
            }else{
                right--;
            }
        }
    }
}
