class Solution {
    public int threeSumMulti(int[] A, int target) {
        if(A == null || A.length<3)
            return 0;
        
        Arrays.sort(A);
        long res = 0;
        
        Map<Integer,Long> map = new HashMap<>();
        int length=A.length;
        for(int i=0;i<length;i++){
            map.putIfAbsent(A[i],(long)0);
            map.put(A[i],map.get(A[i])+1);
        }
        
        for(int i=0;i<length;i++){
            if(i!=0 && A[i]==A[i-1])
                continue;
            
            int j=i+1;
            int k=length-1;
            
            while(j<k){
                if(A[i]+A[j]+A[k]==target){
                    if(A[i]==A[j] && A[i]==A[k]){
                        res+=(map.get(A[i]))*(map.get(A[i])-1)*(map.get(A[i])-2)/6 %1000000007;
                    }else if(A[i]==A[j]){
                        res+=(map.get(A[i]))*(map.get(A[i])-1)/2*(map.get(A[k]))%1000000007;
                    }else if(A[j]==A[k]){
                        res+=(map.get(A[j]))*(map.get(A[j])-1)/2*(map.get(A[i]))%1000000007;
                    }else{
                        res+=map.get(A[i])*map.get(A[j])*map.get(A[k])%1000000007;
                    }
                    
                    j++;
                    k--;
                    while(j<k && A[j]==A[j-1])
                        j++;
                    while(j<k && A[k]==A[k+1])
                        k--;
                }else if(A[i]+A[j]+A[k]<target){
                    j++;
                }else{
                    k--;
                }
            }
        }
        return (int) res%1000000007;
    }
}
