/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return helper(preorder,0, preorder.length-1, inorder, 0, inorder.length-1);
    }
    
    private TreeNode helper(int[] preorder, int l1, int r1, int[] inorder, int l2, int r2){
        if(l1>r1)
            return null;
        if(l1==r1)
            return new TreeNode(preorder[l1]);
        
        int index=0;
        for(;index<inorder.length;index++){
            if(inorder[index]==preorder[l1])
                break;
        }
        
        TreeNode root = new TreeNode(preorder[l1]);
        root.left = helper(preorder,l1+1, index-l2+l1, inorder, l2, index-1);
        root.right = helper(preorder, index-l2+l1+1, r1, inorder, index+1, r2);
        return root;
    }
}
