/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        List<Integer> list = new ArrayList<>();
        while(head!=null){
            list.add(head.val);
            head=head.next;
        }
        return BST(list, 0, list.size()-1);
    }
    
    private TreeNode BST(List<Integer> list, int left, int right){
        if(left>right)
            return null;
        if(left==right)
            return new TreeNode(list.get(left));
        int mid=(right-left+1)/2+left;
        TreeNode node = new TreeNode(list.get(mid));
        node.left=BST(list,left, mid-1);
        node.right=BST(list, mid+1,right);
        return node;
    }
}
