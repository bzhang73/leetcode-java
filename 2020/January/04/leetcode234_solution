/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head==null)
            return true;
        
        ListNode middle =findMiddle(head);
        // System.out.println(middle.val);
        
        middle.next=reverse(middle.next);
        middle=middle.next;
        
        while(middle!=null && head.val==middle.val){
            head=head.next;
            middle=middle.next;
        }
        if(middle==null)
            return true;
        return false;
    }
    
    private ListNode reverse(ListNode head){
        ListNode prev=null;
        while(head!=null){
            ListNode temp = head.next;
            head.next=prev;
            prev=head;
            head=temp;
        }
        return prev;
    }
    
    private ListNode findMiddle(ListNode head){
        if(head==null)
            return head;
        ListNode fast=head.next;
        while(fast!=null && fast.next!=null){
            fast=fast.next.next;
            head=head.next;
        }
        return head;
    }
}
