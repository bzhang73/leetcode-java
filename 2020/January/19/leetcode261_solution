class Solution {
    int[] parents;
    int[] ranks;
    public boolean validTree(int n, int[][] edges) {
        parents=new int[n];
        ranks=new int[n];
        
        for(int i=0;i<n;i++)
            parents[i]=i;
        for(int[] edge:edges){
            if(!union(edge[0],edge[1])){
                return false;
            }
        }
        return edges.length==n-1;
    }
    
    private int find(int x){
        if(parents[x]!=x){
            parents[x]=find(parents[x]);
        }
        return parents[x];
    }
    
    private boolean union(int x,int y){
        int px=find(x);
        int py=find(y);
        
        if(px==py)
            return false;
        if(ranks[px]<ranks[py]){
            parents[px]=py;
            ranks[py]++;
        }else{
            parents[py]=px;
            ranks[px]++;
        }
        return true;
    }
}
