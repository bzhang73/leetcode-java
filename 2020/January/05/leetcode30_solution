class Solution {
    public List<Integer> findSubstring(String s, String[] words) {
        List<Integer> res = new ArrayList<>();
        if(s==null || s.equals("") || words==null || words.length==0)
            return res;
        Map<String,Integer> toFind = new HashMap<>();
        Map<String,Integer> found = new HashMap<>();
        
        int m=words.length;
        int n = words[0].length();
        
        for(int i=0;i<m;i++){
            if(!toFind.containsKey(words[i])){
                toFind.put(words[i],1);
            }else{
                toFind.put(words[i],toFind.get(words[i])+1);
            }
        }
        
        for(int i=0;i<=s.length()-m*n;i++){
            found.clear();
            int j=0;
            for(j=0;j<m;j++){
                int k=i+j*n;
                String temp = s.substring(k,k+n);
                if(!toFind.containsKey(temp))
                    break;
                if(!found.containsKey(temp)){
                    found.put(temp,1);
                }else{
                    found.put(temp,found.get(temp)+1);
                }
                if(found.get(temp)>toFind.get(temp))
                    break;
            }
            if(j==m)
                res.add(i);
        }
        return res;
    }
}
