/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        if(root==null)
            return res;
        Stack<TreeNode> stack1 = new Stack<>();
        Stack<TreeNode> stack2 = new Stack<>();
        stack1.push(root);
        int count=1;
        while(!stack1.isEmpty() || !stack2.isEmpty()){
            List<Integer> list = new ArrayList<>();
            int size=0;
            if(count%2==1)
                size=stack1.size();
            else
                size=stack2.size();
            for(int i=0;i<size;i++){
                if(count%2==1){
                    TreeNode temp = stack1.pop();
                    list.add(temp.val);
                    
                    if(temp.left!=null)
                        stack2.push(temp.left);
                    if(temp.right!=null)
                        stack2.push(temp.right);
                }else{
                    TreeNode temp = stack2.pop();
                    list.add(temp.val);
                    
                    if(temp.right!=null)
                        stack1.push(temp.right);
                    if(temp.left!=null)
                        stack1.push(temp.left);
                }
            }
            count++;
            res.add(list);
        }
        return res;
    }
}
