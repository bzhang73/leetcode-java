/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        if(root==null)
            return false;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        int depth=1;
        int xdepth=-1;
        int ydepth=-1;
        while(xdepth==-1 || ydepth==-1){
            int size=queue.size();
            for(int i=0;i<size;i++){
                TreeNode temp =  queue.poll();
                if(temp.val==x)
                    xdepth=depth;
                else if(temp.val==y)
                    ydepth=depth;
                if(temp.left!=null && temp.right!=null)
                    if((temp.left.val==x && temp.right.val==y) || (temp.left.val==y && temp.right.val==x))
                        return false;
                if(temp.left!=null)
                    queue.add(temp.left);
                if(temp.right!=null)
                    queue.offer(temp.right);
            }
            depth++;
        }
        return (xdepth==ydepth)?true:false;
 
    }
}
