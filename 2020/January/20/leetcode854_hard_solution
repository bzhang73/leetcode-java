class Solution {
    public int kSimilarity(String A, String B) {
        StringBuilder sbA=new StringBuilder();
        StringBuilder sbB=new StringBuilder();
        for(int i=0;i<A.length();i++){
            if(A.charAt(i)!=B.charAt(i)){
                sbA.append(A.charAt(i));
                sbB.append(B.charAt(i));
            }
        }
        int res =0;
        res=dfs(sbA.toString(),sbB.toString());
        return res;
    }
    
    private int dfs(String str1, String str2){
        int n=str1.length();
        if(n==0)
            return 0;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if(str1.charAt(i)==str2.charAt(j) && str1.charAt(j)==str2.charAt(i)){
                    return 1+dfs(remove(str1,i,j),remove(str2,i,j));
                }
            }
        }
        
        int min = Integer.MAX_VALUE;
        for(int i=1;i<n;i++){
            if(str1.charAt(i)==str2.charAt(0)){
                StringBuilder sb = new StringBuilder(str1);
                sb.replace(i,i+1,str1.charAt(0)+"");
                min = Math.min(min,1+dfs(sb.toString().substring(1),str2.substring(1)));
            }
        }
        return min;
    }
    
    private String remove(String str, int i, int j){
        return str.substring(0,i)+str.substring(i+1,j)+str.substring(j+1);
    }
}
