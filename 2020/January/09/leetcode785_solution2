class Solution {
    public boolean isBipartite(int[][] graph) {
        int[] isValid= new int[graph.length];
        Queue<Integer> queue = new LinkedList<>();
        
        for(int i=0;i<graph.length;i++){
            if(isValid[i]!=0)
                continue;
            queue.offer(i);
            isValid[i]=1;
            while(!queue.isEmpty()){
                int curr = queue.poll();
                int[] neighbors=graph[curr];
                for(int neighbor : neighbors){
                    if(isValid[neighbor]==0){
                        queue.offer(neighbor);
                        isValid[neighbor]=-isValid[curr];
                    }else{
                        if(isValid[neighbor]==isValid[curr]){
                            return false;
                        }
                    }
                }
            }
        }
        return true;
    }
}
