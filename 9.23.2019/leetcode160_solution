/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA==null || headB==null)
            return null;
        
        ListNode tail=headA;
        while(tail.next!=null)
            tail=tail.next;
        
        tail.next=headB;
        ListNode result = findCycle(headA);
        tail.next=null;
        
        return result;
    }
    
    private ListNode findCycle(ListNode head){
        ListNode fast=head.next;
        ListNode slow=head;
        
        while(fast!=slow){
            if(fast==null ||  fast.next==null)
                return null;
            fast=fast.next.next;
            slow=slow.next;
        }
        slow=slow.next;
        while(head!=slow){
            head=head.next;
            slow=slow.next;
        }
        
        return slow;
    }
    
}
