class Solution {
    public String longestPalindrome(String s) {
       int length=s.length();
        if(length==0)
            return "";
        boolean[][] dp=new boolean[length][length];
        int longest=1;
        int start=0;
        for(int i=0;i<length;i++)
            dp[i][i]=true;
        for(int i=0;i<length-1;i++){
            dp[i][i+1]=s.charAt(i)==s.charAt(i+1);
            
            if(dp[i][i+1]){
                start=i;
                longest=2;
            }
        }
        
        for(int i=length-1;i>=0;i--){
            for(int j=i+2;j<length;j++){
                dp[i][j]=s.charAt(i)==s.charAt(j) && dp[i+1][j-1];
                if(dp[i][j] && j-i+1>longest){
                    start=i;
                    longest=j-i+1;
                }
            }
        }
        
        return s.substring(start,start+longest);
    }
}
