class Solution {
    public int[] rearrangeBarcodes(int[] barcodes) {
        int n=barcodes.length;
        if(n==1)
            return barcodes;
        PriorityQueue<int[]> queue=new PriorityQueue<int[]>((a,b)->b[1]-a[1]);
        Arrays.sort(barcodes);
        int count=1;
        for(int i=1;i<barcodes.length;i++){
            if(barcodes[i]==barcodes[i-1]){
                count++;
            }else{
                queue.offer(new int[]{barcodes[i-1],count});
                count=1;
            }
            if(i==barcodes.length-1)
                queue.offer(new int[]{barcodes[i],count});
        }
        
        int start=queue.peek()[1];
        int index;
        if(start>n/2)
            index=0;
        else
            index=1;
        
        int[] res=new int[n];
        while(!queue.isEmpty()){
            int[] temp=queue.poll();
            while(temp[1]-->0){
                res[index]=temp[0];
                index+=2;
                if(index>n && start>n/2)
                    index=1;
                else if(index>n)
                    index=0;
            }
        }
        return res;
    }
}
