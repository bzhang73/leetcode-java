class Solution {
    public int maxPoints(int[][] points) {
        if(points==null || points.length==0)
            return 0;
        
        HashMap<Double,Integer> map = new HashMap<>();
        int max=1;
        for(int i=0;i<points.length;i++){
            map.clear();
            
            //store the same x1 x2
            map.put((double)Integer.MIN_VALUE,1);
            
            int dup=0;
            for(int j=i+1;j<points.length;j++){
                if(points[j][0]==points[i][0] && points[j][1]==points[i][1]){
                    dup++;
                    continue;
                }
                
                double key = (points[j][0]-points[i][0] == 0)?Integer.MIN_VALUE:0.0+(double)( points[j][1]-points[i][1])/(double)( points[j][0]-points[i][0]);
                
                if(map.containsKey(key)){
                    map.put(key,map.get(key)+1);
                }else
                    map.put(key,2);
            }
            
            for(int temp: map.values()){
                if(temp+dup>max){
                    max=temp+dup;
                }
            }
        }
        
       return max;
        
    }
}
