public List<Integer> topKFrequent(int[] nums, int k) {
	Map<Integer, Integer> map = new HashMap<>();
	/** count each key frequency */
	for(int i = 0; i < nums.length ; i++){
		map.put(nums[i], map.containsKey(nums[i]) ? map.get(nums[i]) + 1 : 1);
	}
	
	/** sort the list */
	List<Map.Entry<Integer, Integer>> list = new LinkedList<>(map.entrySet());
	Collections.sort(list, new Comparator<Map.Entry<Integer, Integer>>(){
		
		/** Sort values in descending order */
		public int compare(Map.Entry<Integer, Integer> o1, Map.Entry<Integer, Integer> o2) {
			return o2.getValue().compareTo(o1.getValue());
		}
	});
	
	/** find k most frequent element */
	List<Integer> res = new ArrayList<>();
	for (int i = 0; i< k; i++)
		res.add((Integer) list.get(i).getKey());
	return res;
}
