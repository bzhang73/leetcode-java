class Solution {
    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {
        List<List<Integer>> res=new ArrayList<>();
        if(k==0 || nums1.length==0 || nums2.length==0)
            return res;
        PriorityQueue<int[]> queue =new PriorityQueue<int[]>((a,b)->a[2]-b[2]);
        for(int i=0;i<nums1.length;i++){
            for(int j=0;j<nums2.length;j++){
                queue.offer(new int[]{nums1[i],nums2[j], nums1[i]+nums2[j]});
            }
        }
        
        int count=0;
        while(!queue.isEmpty() && count<k){
            List<Integer> list=new ArrayList<>();
            int[] temp=queue.poll();
            list.add(temp[0]);
            list.add(temp[1]);
            res.add(list);
            count++;
        }
        return res;
    }
}
