class MaxStack {
    private Stack<Integer> stack;
    private Stack<Integer> max;
    private Stack<Integer> temp;
    /** initialize your data structure here. */
    public MaxStack() {
        stack=new Stack<Integer>();
        max=new Stack<Integer>();
        temp=new Stack<Integer>();
    }
    
    public void push(int x) {
        if(max.isEmpty()){
            max.push(x);
            stack.push(x);
        }else{
            stack.push(x);
            x=Math.max(x,max.peek());
            
            max.push(x);
        }
    }
    
    public int pop() {
        max.pop();
        return stack.pop();
    }
    
    public int top() {
        return stack.peek();
    }
    
    public int peekMax() {
        return max.peek();
    }
    
    public int popMax() {
        // System.out.println(max.peek());
        int res=peekMax();
        while(top()!=res){
            temp.push(pop());
        }
        pop();
        while(!temp.isEmpty())
            push(temp.pop());
        return res;
    }
}

/**
 * Your MaxStack object will be instantiated and called as such:
 * MaxStack obj = new MaxStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.peekMax();
 * int param_5 = obj.popMax();
 */
