class Solution {
    public int evalRPN(String[] tokens) {
        if(tokens.length==0)
            return 0;
        int res=0;
        Stack<Integer> stack=new Stack<>();
        for(int i=0;i<tokens.length;i++){
        
            if(isDigit(tokens[i])){
                int a = Integer.parseInt(tokens[i]);
                stack.push(a);
            }else{
                if(tokens[i].charAt(0)=='+'){
                    int t1=stack.pop();
                    int t2=stack.pop();
                    stack.push(t1+t2);
                }else if(tokens[i].charAt(0)=='-'){
                    int t1=stack.pop();
                    int t2=stack.pop();
                    stack.push(t2-t1);
                }else if(tokens[i].charAt(0)=='*'){
                    int t1=stack.pop();
                    int t2=stack.pop();
                    stack.push(t2*t1);
                    // System.out.println(t1 + " " +t2 + " " + t2*t1);
                }else if(tokens[i].charAt(0)=='/'){
                    int t1=stack.pop();
                    int t2=stack.pop();
                    stack.push(t2/t1);
                }
                // System.out.println(stack.peek());
            }
        }
        
        return stack.pop();
    }
    
    private boolean isDigit(String s){
        int i=0;
        int op=0;
        if(s.charAt(0)=='-'){
            op=1;
            i=1;
        }

        int sum=0;
        for(;i<s.length();i++){
            if(s.charAt(i)>='0' && s.charAt(i)<='9'){
                sum*=10;
                sum+=s.charAt(i)-'0';
            }else{
                return false;
            }
        }
        
        if(op==1 && sum==0)
            return false;
        
        return true;
    }
}
