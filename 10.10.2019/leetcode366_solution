/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> findLeaves(TreeNode root) {
        List<List<Integer>> res=new ArrayList<>();
        if(root==null)
            return res;
        
        Map<Integer,List<Integer>> map = new HashMap<>();
        
        int max=findDepth(root,map);
        
        for(int i=1;i<=max;i++)
            res.add(map.get(i));
        
        return res;
    }
    
    private int findDepth(TreeNode root, Map<Integer,List<Integer>> map){
        if(root==null)
            return 0;
        
        int depth=Math.max(findDepth(root.left,map),findDepth(root.right,map))+1;
        
        map.putIfAbsent(depth,new ArrayList<Integer>());
        map.get(depth).add(root.val);
        
        return depth;
    }
}
